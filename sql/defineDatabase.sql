CREATE TABLE "ADDRESS" 
   (	"ADDRESS_ID" NUMBER(10,0), 
	"ADD_NUMBER" NUMBER(10,0), 
	"STATE" VARCHAR2(50 BYTE), 
	"CITY" VARCHAR2(50 BYTE), 
	"STREET_NAME" VARCHAR2(50 BYTE), 
	"COUNTRY" VARCHAR2(50 BYTE)
   );

CREATE UNIQUE INDEX "SYS_C00643268" ON "ADDRESS" ("ADDRESS_ID");

CREATE OR REPLACE TRIGGER "ADDRESS_PK_TRIGGER" 
   before insert on "ADDRESS" 
   for each row 
begin  
   if inserting then 
      if :NEW."ADDRESS_ID" is null then 
         select ADDRESS_SEQ.nextval into :NEW."ADDRESS_ID" from dual; 
      end if; 
   end if; 
end;

ALTER TRIGGER "ADDRESS_PK_TRIGGER" ENABLE;

ALTER TABLE "ADDRESS" ADD PRIMARY KEY ("ADDRESS_ID")

CREATE TABLE "BODY_PART" 
   (	"BODY_PART_CODE" VARCHAR2(20 BYTE), 
	"NAME" VARCHAR2(50 BYTE)
   );

CREATE UNIQUE INDEX "SYS_C00643281" ON "BODY_PART" ("BODY_PART_CODE");

ALTER TABLE "BODY_PART" ADD PRIMARY KEY ("BODY_PART_CODE");

CREATE TABLE "CERTIFICATION" 
   (	"ACRONYM" VARCHAR2(20 BYTE), 
	"NAME" VARCHAR2(50 BYTE), 
	"CERTIFICATION_DATE" DATE, 
	"EXPIRATION_DATE" DATE
   );

CREATE UNIQUE INDEX "SYS_C00643269" ON "CERTIFICATION" ("ACRONYM");

ALTER TABLE "CERTIFICATION" ADD PRIMARY KEY ("ACRONYM");

CREATE TABLE "CHECK_IN" 
   (	"CHECK_IN_ID" NUMBER(10,0), 
	"START_TIME" TIMESTAMP (6), 
	"END_TIME" TIMESTAMP (6), 
	"PRIORITY" CHAR(1 BYTE), 
	"PATIENT_ID" NUMBER(10,0), 
	"FACILITY_ID" NUMBER(10,0)
   );

CREATE UNIQUE INDEX "SYS_C00643475" ON "CHECK_IN" ("CHECK_IN_ID");


CREATE OR REPLACE TRIGGER "CHECK_IN_PK_TRIGGER" 
   before insert on "CHECK_IN" 
   for each row 
begin  
   if inserting then 
      if :NEW."CHECK_IN_ID" is null then 
         select CHECK_IN_ID_SEQUENCE.nextval into :NEW."CHECK_IN_ID" from dual; 
      end if; 
   end if; 
end;

ALTER TRIGGER "CHECK_IN_PK_TRIGGER" ENABLE;

ALTER TABLE "CHECK_IN" ADD CONSTRAINT "CHECK_IN_PRIORITY" CHECK (priority IN('H', 'N', 'Q')) ENABLE;

ALTER TABLE "CHECK_IN" ADD PRIMARY KEY ("CHECK_IN_ID");

ALTER TABLE "CHECK_IN" ADD CONSTRAINT "FK_CHECKINFACILITY" FOREIGN KEY ("FACILITY_ID")
	  REFERENCES "MEDICAL_FACILITY" ("FACILITY_ID") ENABLE;
 
ALTER TABLE "CHECK_IN" ADD CONSTRAINT "FK_CHECKINPATIENT" FOREIGN KEY ("PATIENT_ID")
	  REFERENCES "PATIENT" ("PATIENT_ID") ENABLE;

  CREATE TABLE "DEPARTMENT_SPECIALITY" 
   (	"DEPARTMENT_CODE" VARCHAR2(5 BYTE), 
	"BODY_PART_CODE" VARCHAR2(20 BYTE)
   );

CREATE UNIQUE INDEX "SYS_C00643272" ON "DEPARTMENT_SPECIALITY" ("DEPARTMENT_CODE", "BODY_PART_CODE");

ALTER TABLE "DEPARTMENT_SPECIALITY" ADD PRIMARY KEY ("DEPARTMENT_CODE", "BODY_PART_CODE");

ALTER TABLE "DEPARTMENT_SPECIALITY" ADD CONSTRAINT "FK_BODYPARTASSOCIATION" FOREIGN KEY ("BODY_PART_CODE")
	  REFERENCES "BODY_PART" ("BODY_PART_CODE") ENABLE;
 
ALTER TABLE "DEPARTMENT_SPECIALITY" ADD CONSTRAINT "FK_DEPARTMENT" FOREIGN KEY ("DEPARTMENT_CODE")
	  REFERENCES "SERVICE_DEPARTMENT" ("DEPARTMENT_CODE") ENABLE;
    
CREATE TABLE "FACILITY_CERTIFICATION" 
   (	"ACRONYM" VARCHAR2(20 BYTE), 
	"FACILITY_ID" NUMBER(10,0)
   );

CREATE UNIQUE INDEX "SYS_C00643270" ON "FACILITY_CERTIFICATION" ("ACRONYM", "FACILITY_ID");

ALTER TABLE "FACILITY_CERTIFICATION" ADD PRIMARY KEY ("ACRONYM", "FACILITY_ID");

ALTER TABLE "FACILITY_CERTIFICATION" ADD FOREIGN KEY ("FACILITY_ID")
	  REFERENCES "MEDICAL_FACILITY" ("FACILITY_ID") ENABLE;
 
ALTER TABLE "FACILITY_CERTIFICATION" ADD FOREIGN KEY ("ACRONYM")
	  REFERENCES "CERTIFICATION" ("ACRONYM") ENABLE;

CREATE TABLE "FEEDBACK" 
   (	"FEEDBACK_ID" NUMBER(10,0), 
	"DESCRIPTION" VARCHAR2(4000 BYTE)
   );

CREATE UNIQUE INDEX "SYS_C00643294" ON "FEEDBACK" ("FEEDBACK_ID");

CREATE OR REPLACE TRIGGER "FEEDBACK_PK_TRIGGER" 
   before insert on "FEEDBACK" 
   for each row 
begin  
   if inserting then 
      if :NEW."FEEDBACK_ID" is null then 
         select FEEDBACK_SEQUENCE.nextval into :NEW."FEEDBACK_ID" from dual; 
      end if; 
   end if; 
end;

ALTER TRIGGER "FEEDBACK_PK_TRIGGER" ENABLE;

ALTER TABLE "FEEDBACK" ADD PRIMARY KEY ("FEEDBACK_ID");

CREATE TABLE "MEDICAL_FACILITY" 
   (	"FACILITY_ID" NUMBER(10,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"CAPACITY" NUMBER(10,0), 
	"CLASSIFICATION" NUMBER(1,0), 
	"ADDRESS_ID" NUMBER(10,0)
   );

CREATE UNIQUE INDEX "SYS_C00643267" ON "MEDICAL_FACILITY" ("FACILITY_ID");

CREATE OR REPLACE TRIGGER "MEDICAL_FACILITY_PK_TRIGGER" 
   before insert on "MEDICAL_FACILITY" 
   for each row 
begin  
   if inserting then 
      if :NEW."FACILITY_ID" is null then 
         select MEDICAL_FACILITY_SEQ.nextval into :NEW."FACILITY_ID" from dual; 
      end if; 
   end if; 
end;

ALTER TRIGGER "MEDICAL_FACILITY_PK_TRIGGER" ENABLE;

ALTER TABLE "MEDICAL_FACILITY" ADD CONSTRAINT "FACILITY_CLASSIFICATION" CHECK (classification IN(1, 2, 3)) ENABLE;
 
ALTER TABLE "MEDICAL_FACILITY" MODIFY ("NAME" NOT NULL ENABLE);
 
ALTER TABLE "MEDICAL_FACILITY" ADD PRIMARY KEY ("FACILITY_ID");

ALTER TABLE "MEDICAL_FACILITY" ADD FOREIGN KEY ("ADDRESS_ID")
	  REFERENCES "ADDRESS" ("ADDRESS_ID") ENABLE;

CREATE TABLE "MEDICAL_SERVICE_DEPARTMENT" 
   (	"DEPARTMENT_CODE" VARCHAR2(5 BYTE)
   );

CREATE UNIQUE INDEX "SYS_C00643274" ON "MEDICAL_SERVICE_DEPARTMENT" ("DEPARTMENT_CODE");
    ALTER TABLE "MEDICAL_SERVICE_DEPARTMENT" ADD PRIMARY KEY ("DEPARTMENT_CODE");

ALTER TABLE "MEDICAL_SERVICE_DEPARTMENT" ADD CONSTRAINT "FK_MEDSERVICEDEPARTMENT" FOREIGN KEY ("DEPARTMENT_CODE")
	  REFERENCES "SERVICE_DEPARTMENT" ("DEPARTMENT_CODE") ENABLE;

CREATE TABLE "MEDICAL_STAFF" 
   (	"MEDICAL_STAFF_ID" NUMBER(10,0), 
	"PRIMARY_DEPARTMENT_CODE" VARCHAR2(5 BYTE)
   );

CREATE UNIQUE INDEX "SYS_C00643284" ON "MEDICAL_STAFF" ("MEDICAL_STAFF_ID");

ALTER TABLE "MEDICAL_STAFF" ADD PRIMARY KEY ("MEDICAL_STAFF_ID");

ALTER TABLE "MEDICAL_STAFF" ADD CONSTRAINT "FK_MEDICALSTAFF" FOREIGN KEY ("MEDICAL_STAFF_ID")
	  REFERENCES "STAFF" ("STAFF_ID") ENABLE;
 
ALTER TABLE "MEDICAL_STAFF" ADD CONSTRAINT "FK_MEDPRIMARYDEPARTMENT" FOREIGN KEY ("PRIMARY_DEPARTMENT_CODE")
	  REFERENCES "MEDICAL_SERVICE_DEPARTMENT" ("DEPARTMENT_CODE") ENABLE;

CREATE TABLE "NEGATIVE_EXPERIENCE" 
   (	"REPORT_ID" NUMBER(10,0), 
	"EXPERIENCE_CODE" NUMBER(1,0), 
	"DESCRIPTION" VARCHAR2(4000 BYTE)
   );

CREATE UNIQUE INDEX "SYS_C00643466" ON "NEGATIVE_EXPERIENCE" ("REPORT_ID");

ALTER TABLE "NEGATIVE_EXPERIENCE" ADD CONSTRAINT "NEGATIVE_EXPERIENCE_CODE" CHECK (experience_code IN(1,2)) ENABLE;
 
ALTER TABLE "NEGATIVE_EXPERIENCE" ADD PRIMARY KEY ("REPORT_ID");

ALTER TABLE "NEGATIVE_EXPERIENCE" ADD CONSTRAINT "FK_NEGATIVE_EXP_OUTCOME_RPT" FOREIGN KEY ("REPORT_ID")
	  REFERENCES "OUTCOME_REPORT" ("REPORT_ID") ENABLE;

CREATE TABLE "NON_MEDICAL_SERVICE_DEPARTMENT" 
   (	"DEPARTMENT_CODE" VARCHAR2(5 BYTE)
   );

CREATE UNIQUE INDEX "SYS_C00643275" ON "NON_MEDICAL_SERVICE_DEPARTMENT" ("DEPARTMENT_CODE");

ALTER TABLE "NON_MEDICAL_SERVICE_DEPARTMENT" ADD PRIMARY KEY ("DEPARTMENT_CODE");

ALTER TABLE "NON_MEDICAL_SERVICE_DEPARTMENT" ADD CONSTRAINT "FK_NONMEDSERVICEDEPARTMENT" FOREIGN KEY ("DEPARTMENT_CODE")
	  REFERENCES "SERVICE_DEPARTMENT" ("DEPARTMENT_CODE") ENABLE;

  
CREATE TABLE "NON_MEDICAL_STAFF" 
   (	"NON_MEDICAL_STAFF_ID" NUMBER(10,0), 
	"PRIMARY_DEPARTMENT_CODE" VARCHAR2(5 BYTE)
   );

CREATE UNIQUE INDEX "SYS_C00643278" ON "NON_MEDICAL_STAFF" ("NON_MEDICAL_STAFF_ID");

ALTER TABLE "NON_MEDICAL_STAFF" ADD PRIMARY KEY ("NON_MEDICAL_STAFF_ID");

ALTER TABLE "NON_MEDICAL_STAFF" ADD CONSTRAINT "FK_NONMEDICALSTAFF" FOREIGN KEY ("NON_MEDICAL_STAFF_ID")
	  REFERENCES "STAFF" ("STAFF_ID") ENABLE;
 
ALTER TABLE "NON_MEDICAL_STAFF" ADD CONSTRAINT "FK_NONMEDPRIMARYDEPARTMENT" FOREIGN KEY ("PRIMARY_DEPARTMENT_CODE")
	  REFERENCES "NON_MEDICAL_SERVICE_DEPARTMENT" ("DEPARTMENT_CODE") ENABLE;

CREATE TABLE "OUTCOME_REPORT" 
   (	"REPORT_ID" NUMBER(10,0), 
	"DISCHARGE_STATUS" CHAR(1 BYTE), 
	"TREATMENT_DESCRIPTION" VARCHAR2(4000 BYTE), 
	"GENERATION_TIME" TIMESTAMP (6), 
	"PATIENT_CONFIRMATION" NUMBER(1,0), 
	"REFERRAL_ID" NUMBER(10,0), 
	"FEEDBACK_ID" NUMBER(10,0), 
	"CHECK_IN_ID" NUMBER(10,0)
   );

CREATE UNIQUE INDEX "SYS_C00643293" ON "OUTCOME_REPORT" ("REPORT_ID");

CREATE OR REPLACE TRIGGER "OUTCOME_REPORT_PK_TRIGGER" 
   before insert on "OUTCOME_REPORT" 
   for each row 
begin  
   if inserting then 
      if :NEW."REPORT_ID" is null then 
         select OUTCOME_REPORT_SEQUENCE.nextval into :NEW."REPORT_ID" from dual; 
      end if; 
   end if; 
end;

ALTER TRIGGER "OUTCOME_REPORT_PK_TRIGGER" ENABLE;

ALTER TABLE "OUTCOME_REPORT" ADD CONSTRAINT "OUTCOME_RPT_CONFIRMATION" CHECK (patient_confirmation IN(1,0)) ENABLE;
 
ALTER TABLE "OUTCOME_REPORT" ADD CONSTRAINT "OUTCOME_RPT_DISCHARGE" CHECK (discharge_status IN('T', 'D', 'R')) ENABLE;
 
ALTER TABLE "OUTCOME_REPORT" MODIFY ("DISCHARGE_STATUS" NOT NULL ENABLE);
 
ALTER TABLE "OUTCOME_REPORT" ADD PRIMARY KEY ("REPORT_ID");

ALTER TABLE "OUTCOME_REPORT" ADD CONSTRAINT "FK_OUTCOME_REPORT_FEEDBACK" FOREIGN KEY ("FEEDBACK_ID")
	  REFERENCES "FEEDBACK" ("FEEDBACK_ID") ENABLE;
 
ALTER TABLE "OUTCOME_REPORT" ADD CONSTRAINT "FK_OUT_REPT_REFERRAL_STATUS" FOREIGN KEY ("REFERRAL_ID")
	  REFERENCES "REFERRAL_STATUS" ("REFERRAL_ID") ENABLE;
 
ALTER TABLE "OUTCOME_REPORT" ADD CONSTRAINT "FK_REPORT_CHECK_IN" FOREIGN KEY ("CHECK_IN_ID")
	  REFERENCES "CHECK_IN" ("CHECK_IN_ID") ENABLE;

  CREATE TABLE "PATIENT" 
   (	"PATIENT_ID" NUMBER(10,0), 
	"FIRST_NAME" VARCHAR2(20 BYTE), 
	"LAST_NAME" VARCHAR2(20 BYTE), 
	"DATE_OF_BIRTH" DATE, 
	"PHONE_NUMBER" NUMBER(11,0), 
	"ADDRESS_ID" NUMBER(10,0)
   );

CREATE UNIQUE INDEX "SYS_C00643265" ON "PATIENT" ("PATIENT_ID") ;

    CREATE OR REPLACE TRIGGER "PATIENT_PK_SEQUENCE_TRIGGER" 
   before insert on "PATIENT" 
   for each row 
begin  
   if inserting then 
      if :NEW."PATIENT_ID" is null then 
         select PATIENT_SEQ.nextval into :NEW."PATIENT_ID" from dual; 
      end if; 
   end if; 
end;

ALTER TRIGGER "PATIENT_PK_SEQUENCE_TRIGGER" ENABLE;


ALTER TABLE "PATIENT" MODIFY ("FIRST_NAME" NOT NULL ENABLE);
 
ALTER TABLE "PATIENT" ADD PRIMARY KEY ("PATIENT_ID");

ALTER TABLE "PATIENT" ADD FOREIGN KEY ("ADDRESS_ID")
	  REFERENCES "ADDRESS" ("ADDRESS_ID") ENABLE;

CREATE TABLE "REFERRAL_REASON" 
   (	"REFERRAL_REASON_ID" NUMBER(10,0), 
	"REASON_CODE" NUMBER(1,0), 
	"DESCRIPTION" VARCHAR2(4000 BYTE), 
	"REFERRAL_ID" NUMBER(10,0), 
	"SERVICE_NAME" VARCHAR2(4000 BYTE)
   );

CREATE UNIQUE INDEX "SYS_C00643296" ON "REFERRAL_REASON" ("REFERRAL_REASON_ID");

CREATE OR REPLACE TRIGGER "REFERRAL_REASON_PK_TRIGGER" 
   before insert on "REFERRAL_REASON" 
   for each row 
begin  
   if inserting then 
      if :NEW."REFERRAL_REASON_ID" is null then 
         select REFERRAL_REASON_SEQUENCE.nextval into :NEW."REFERRAL_REASON_ID" from dual; 
      end if; 
   end if; 
end;


ALTER TRIGGER "REFERRAL_REASON_PK_TRIGGER" ENABLE;

ALTER TABLE "REFERRAL_REASON" ADD CONSTRAINT "REFERRAL_REASON_CODE" CHECK (reason_code IN(1,2,3)) ENABLE;
 
ALTER TABLE "REFERRAL_REASON" ADD PRIMARY KEY ("REFERRAL_REASON_ID");

ALTER TABLE "REFERRAL_REASON" ADD CONSTRAINT "FK_REFERRAL_REASON_STATUS" FOREIGN KEY ("REFERRAL_ID")
	  REFERENCES "REFERRAL_STATUS" ("REFERRAL_ID") ENABLE;

CREATE TABLE "REFERRAL_STATUS" 
   (	"REFERRAL_ID" NUMBER(10,0), 
	"FACILITY_ID" NUMBER(10,0), 
	"MEDICAL_STAFF_ID" NUMBER(10,0)
   ) 

CREATE UNIQUE INDEX "SYS_C00643295" ON "REFERRAL_STATUS" ("REFERRAL_ID");
CREATE OR REPLACE TRIGGER "REFERREL_STATUS_PK_TRIGGER" 
   before insert on "REFERRAL_STATUS" 
   for each row 
begin  
   if inserting then 
      if :NEW."REFERRAL_ID" is null then 
         select REFERRAL_STATUS_SEQUENCE.nextval into :NEW."REFERRAL_ID" from dual; 
      end if; 
   end if; 
end;


ALTER TRIGGER "REFERREL_STATUS_PK_TRIGGER" ENABLE;

ALTER TABLE "REFERRAL_STATUS" ADD PRIMARY KEY ("REFERRAL_ID");

ALTER TABLE "REFERRAL_STATUS" ADD CONSTRAINT "FK_REFERRAL_MEDICAL_STAFF" FOREIGN KEY ("MEDICAL_STAFF_ID")
	  REFERENCES "MEDICAL_STAFF" ("MEDICAL_STAFF_ID") ENABLE;
 
ALTER TABLE "REFERRAL_STATUS" ADD CONSTRAINT "FK_REFERRAL_STATUS_FACILITY" FOREIGN KEY ("FACILITY_ID")
	  REFERENCES "MEDICAL_FACILITY" ("FACILITY_ID") ENABLE;

CREATE TABLE "RULE" 
   (	"RULE_ID" NUMBER(10,0), 
	"PRIORITY" CHAR(1 BYTE)
   );

CREATE UNIQUE INDEX "SYS_C00643288" ON "RULE" ("RULE_ID") 

CREATE OR REPLACE TRIGGER "RULE_PK_TRIGGER" 
   before insert on "RULE" 
   for each row 
begin  
   if inserting then 
      if :NEW."RULE_ID" is null then 
         select RULE_SEQUENCE.nextval into :NEW."RULE_ID" from dual; 
      end if; 
   end if; 
end;

ALTER TRIGGER "RULE_PK_TRIGGER" ENABLE;

ALTER TABLE "RULE" ADD PRIMARY KEY ("RULE_ID");

CREATE TABLE "RULE_CONSISTS" 
   (	"RULE_ID" NUMBER(10,0), 
	"RULE_SYMPTOM_ID" NUMBER(10,0)
   );

CREATE UNIQUE INDEX "SYS_C00643290" ON "RULE_CONSISTS" ("RULE_ID", "RULE_SYMPTOM_ID");

ALTER TABLE "RULE_CONSISTS" ADD PRIMARY KEY ("RULE_ID", "RULE_SYMPTOM_ID");

ALTER TABLE "RULE_CONSISTS" ADD CONSTRAINT "FK_RULE_CONSISTS_RULE" FOREIGN KEY ("RULE_ID")
	  REFERENCES "RULE" ("RULE_ID") ENABLE;
 
ALTER TABLE "RULE_CONSISTS" ADD CONSTRAINT "FK_RULE_CONSISTS_RULE_SYMPTOM" FOREIGN KEY ("RULE_SYMPTOM_ID")
	  REFERENCES "RULE_SYMPTOM" ("RULE_SYMPTOM_ID") ENABLE;

CREATE TABLE "RULE_SYMPTOM" 
   (	"RULE_SYMPTOM_ID" NUMBER(10,0), 
	"COMPARISON_SYMBOL" CHAR(1 BYTE), 
	"SYMPTOM_CODE" VARCHAR2(20 BYTE), 
	"BODY_PART_CODE" VARCHAR2(20 BYTE), 
	"SCALE_VALUE_ID" NUMBER(10,0)
   );

CREATE UNIQUE INDEX "SYS_C00643289" ON "RULE_SYMPTOM" ("RULE_SYMPTOM_ID");

CREATE OR REPLACE TRIGGER "RULE_SYMPTOM_PK_TRIGGER" 
   before insert on "RULE_SYMPTOM" 
   for each row 
begin  
   if inserting then 
      if :NEW."RULE_SYMPTOM_ID" is null then 
         select RULE_SYMPTOM_SEQUENCE.nextval into :NEW."RULE_SYMPTOM_ID" from dual; 
      end if; 
   end if; 
end;

ALTER TRIGGER "RULE_SYMPTOM_PK_TRIGGER" ENABLE;

ALTER TABLE "RULE_SYMPTOM" ADD PRIMARY KEY ("RULE_SYMPTOM_ID");

ALTER TABLE "RULE_SYMPTOM" ADD CONSTRAINT "FK_RULE_SYMPTOM_SCALE_VALUE" FOREIGN KEY ("SCALE_VALUE_ID")
	  REFERENCES "SEVERITY_SCALE_VALUE" ("SEVERITY_VALUE_ID") ENABLE;

CREATE TABLE "SECONDARY_MEDICAL_DEPARTMENT" 
   (	"MEDICAL_STAFF_ID" NUMBER(10,0), 
	"MEDICAL_SERVICE_DEPT_CODE" VARCHAR2(5 BYTE)
   );

CREATE UNIQUE INDEX "SYS_C00643279" ON "SECONDARY_MEDICAL_DEPARTMENT" ("MEDICAL_STAFF_ID", "MEDICAL_SERVICE_DEPT_CODE");

ALTER TABLE "SECONDARY_MEDICAL_DEPARTMENT" ADD PRIMARY KEY ("MEDICAL_STAFF_ID", "MEDICAL_SERVICE_DEPT_CODE");

ALTER TABLE "SECONDARY_MEDICAL_DEPARTMENT" ADD CONSTRAINT "FK_MEDICALDEPTSEC" FOREIGN KEY ("MEDICAL_SERVICE_DEPT_CODE")
	  REFERENCES "MEDICAL_SERVICE_DEPARTMENT" ("DEPARTMENT_CODE") ENABLE;
 
ALTER TABLE "SECONDARY_MEDICAL_DEPARTMENT" ADD CONSTRAINT "FK_MEDICALSTAFFSECONDARY" FOREIGN KEY ("MEDICAL_STAFF_ID")
	  REFERENCES "MEDICAL_STAFF" ("MEDICAL_STAFF_ID") ENABLE;

CREATE TABLE "SECONDARY_SERVICE_DEPARTMENT" 
   (	"NON_MEDICAL_STAFF_ID" NUMBER(10,0), 
	"DEPARTMENT_CODE" VARCHAR2(5 BYTE)
   );

CREATE UNIQUE INDEX "SYS_C00643280" ON "SECONDARY_SERVICE_DEPARTMENT" ("NON_MEDICAL_STAFF_ID", "DEPARTMENT_CODE") 

ALTER TABLE "SECONDARY_SERVICE_DEPARTMENT" ADD PRIMARY KEY ("NON_MEDICAL_STAFF_ID", "DEPARTMENT_CODE");

ALTER TABLE "SECONDARY_SERVICE_DEPARTMENT" ADD CONSTRAINT "FK_SERVICEDEPARTMENTSECONDARY" FOREIGN KEY ("DEPARTMENT_CODE")
	  REFERENCES "SERVICE_DEPARTMENT" ("DEPARTMENT_CODE") ENABLE;
 
ALTER TABLE "SECONDARY_SERVICE_DEPARTMENT" ADD CONSTRAINT "FK_SERVICESTAFFSECONDARY" FOREIGN KEY ("NON_MEDICAL_STAFF_ID")
	  REFERENCES "NON_MEDICAL_STAFF" ("NON_MEDICAL_STAFF_ID") ENABLE;

CREATE TABLE "SERVICE" 
   (	"SERVICE_CODE" VARCHAR2(10 BYTE), 
	"NAME" VARCHAR2(50 BYTE), 
	"EQUIPMENT" VARCHAR2(50 BYTE), 
	"FACILITY_ID" NUMBER(10,0)
   );

CREATE UNIQUE INDEX "SYS_C00643273" ON "SERVICE" ("SERVICE_CODE");

ALTER TABLE "SERVICE" ADD PRIMARY KEY ("SERVICE_CODE");

ALTER TABLE "SERVICE" ADD CONSTRAINT "FK_SERVICEFACILITY" FOREIGN KEY ("FACILITY_ID")
	  REFERENCES "MEDICAL_FACILITY" ("FACILITY_ID") ENABLE;

CREATE TABLE "SERVICE_DEPARTMENT" 
   (	"DEPARTMENT_CODE" VARCHAR2(5 BYTE), 
	"NAME" VARCHAR2(50 BYTE), 
	"DIRECTOR_ID" NUMBER(10,0), 
	"FACILITY_ID" NUMBER(10,0)
   );

CREATE UNIQUE INDEX "SYS_C00643271" ON "SERVICE_DEPARTMENT" ("DEPARTMENT_CODE");

ALTER TABLE "SERVICE_DEPARTMENT" ADD PRIMARY KEY ("DEPARTMENT_CODE");

ALTER TABLE "SERVICE_DEPARTMENT" ADD CONSTRAINT "FK_DEPARTMENTDIRECTOR" FOREIGN KEY ("DIRECTOR_ID")
	  REFERENCES "MEDICAL_STAFF" ("MEDICAL_STAFF_ID") ENABLE;
 
ALTER TABLE "SERVICE_DEPARTMENT" ADD CONSTRAINT "FK_DEPARTMENTFACILITY" FOREIGN KEY ("FACILITY_ID")
	  REFERENCES "MEDICAL_FACILITY" ("FACILITY_ID") ENABLE;

CREATE TABLE "SERVICES_OFFERED" 
   (	"SERVICE_CODE" VARCHAR2(10 BYTE), 
	"DEPARTMENT_CODE" VARCHAR2(5 BYTE)
   );

CREATE UNIQUE INDEX "SYS_C00643276" ON "SERVICES_OFFERED" ("SERVICE_CODE", "DEPARTMENT_CODE");

ALTER TABLE "SERVICES_OFFERED" ADD PRIMARY KEY ("SERVICE_CODE", "DEPARTMENT_CODE");

ALTER TABLE "SERVICES_OFFERED" ADD CONSTRAINT "FK_SERVICESOFFEREDDEPARTMENT" FOREIGN KEY ("DEPARTMENT_CODE")
	  REFERENCES "SERVICE_DEPARTMENT" ("DEPARTMENT_CODE") ENABLE;
 
ALTER TABLE "SERVICES_OFFERED" ADD CONSTRAINT "FK_SERVICESOFFEREDSERVICES" FOREIGN KEY ("SERVICE_CODE")
	  REFERENCES "SERVICE" ("SERVICE_CODE") ENABLE;

CREATE TABLE "SEVERITY_SCALE" 
   (	"SEVERITY_SCALE_ID" NUMBER(20,0), 
	"NAME" VARCHAR2(50 BYTE)
   );

CREATE UNIQUE INDEX "SYS_C00643286" ON "SEVERITY_SCALE" ("SEVERITY_SCALE_ID");

CREATE OR REPLACE TRIGGER "SEVERITY_SCALE_PK_TRIGGER" 
   before insert on "SEVERITY_SCALE" 
   for each row 
begin  
   if inserting then 
      if :NEW."SEVERITY_SCALE_ID" is null then 
         select SEVERITY_SCALE_ID_SEQUENCE.nextval into :NEW."SEVERITY_SCALE_ID" from dual; 
      end if; 
   end if; 
end;

ALTER TRIGGER "SEVERITY_SCALE_PK_TRIGGER" ENABLE;

ALTER TABLE "SEVERITY_SCALE" ADD PRIMARY KEY ("SEVERITY_SCALE_ID");

CREATE TABLE "SEVERITY_SCALE_VALUE" 
   (	"SEVERITY_VALUE_ID" NUMBER(10,0), 
	"SCALE_VALUE" VARCHAR2(50 BYTE), 
	"SEVERITY_SCALE_ID" NUMBER(10,0), 
	"SORT" NUMBER(10,0)
   );

CREATE UNIQUE INDEX "SYS_C00643465" ON "SEVERITY_SCALE_VALUE" ("SEVERITY_VALUE_ID");

CREATE UNIQUE INDEX "UNQ_SEVERITY_SCALE_VALUE" ON "SEVERITY_SCALE_VALUE" ("SEVERITY_SCALE_ID", "SCALE_VALUE");

CREATE OR REPLACE TRIGGER "SEVERITY_VALUE_PK_TRIGGER" 
   before insert on "SEVERITY_SCALE_VALUE" 
   for each row 
begin  
   if inserting then 
      if :NEW."SEVERITY_VALUE_ID" is null then 
         select SEVERITY_VALUE_ID_SEQUENCE.nextval into :NEW."SEVERITY_VALUE_ID" from dual; 
      end if; 
   end if; 
end;

ALTER TRIGGER "SEVERITY_VALUE_PK_TRIGGER" ENABLE;

ALTER TABLE "SEVERITY_SCALE_VALUE" ADD PRIMARY KEY ("SEVERITY_VALUE_ID");

ALTER TABLE "SEVERITY_SCALE_VALUE" ADD CONSTRAINT "UNQ_SEVERITY_SCALE_VALUE" UNIQUE ("SEVERITY_SCALE_ID", "SCALE_VALUE");

ALTER TABLE "SEVERITY_SCALE_VALUE" ADD CONSTRAINT "FK_SSVSEVSCALE" FOREIGN KEY ("SEVERITY_SCALE_ID")
	  REFERENCES "SEVERITY_SCALE" ("SEVERITY_SCALE_ID") ENABLE;

CREATE TABLE "STAFF" 
   (	"STAFF_ID" NUMBER(10,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"DESIGNATION" VARCHAR2(50 BYTE), 
	"HIRE_DATE" DATE, 
	"FACILITY_ID" NUMBER(10,0), 
	"DATE_OF_BIRTH" DATE, 
	"ADDRESS_ID" NUMBER(10,0)
   );

CREATE UNIQUE INDEX "SYS_C00643277" ON "STAFF" ("STAFF_ID");

CREATE OR REPLACE TRIGGER "STAFF_PK_TRIGGER" 
   before insert on "STAFF" 
   for each row 
begin  
   if inserting then 
      if :NEW."STAFF_ID" is null then 
         select STAFF_SEQ.nextval into :NEW."STAFF_ID" from dual; 
      end if; 
   end if; 
end;


ALTER TRIGGER "STAFF_PK_TRIGGER" ENABLE;

ALTER TABLE "STAFF" ADD CONSTRAINT "STAFF_CHK1_DESIG" CHECK (DESIGNATION IN ('M', 'N')) ENABLE;
 
ALTER TABLE "STAFF" ADD PRIMARY KEY ("STAFF_ID");

ALTER TABLE "STAFF" ADD CONSTRAINT "FK_STAFFFACILITY" FOREIGN KEY ("FACILITY_ID")
	  REFERENCES "MEDICAL_FACILITY" ("FACILITY_ID") ENABLE;
 
ALTER TABLE "STAFF" ADD CONSTRAINT "FK_STAFF_ADDRESS" FOREIGN KEY ("ADDRESS_ID")
	  REFERENCES "ADDRESS" ("ADDRESS_ID") ENABLE;

CREATE TABLE "SYMPTOM" 
   (	"SYMPTOM_CODE" VARCHAR2(20 BYTE), 
	"NAME" VARCHAR2(50 BYTE), 
	"SEVERITY_SCALE_ID" NUMBER(10,0), 
	"BODY_PART_CODE" VARCHAR2(20 BYTE)
   );

CREATE UNIQUE INDEX "SYS_C00643283" ON "SYMPTOM" ("SYMPTOM_CODE");

CREATE OR REPLACE TRIGGER "SYMPTOM_PK_TRIGGER" 
   before insert on "SYMPTOM" 
   for each row 
begin  
   if inserting then 
      if :NEW."SYMPTOM_CODE" is null then 
         select 'SYM' || to_char(symptom_seq.NEXTVAL, 'FM999999') into :NEW."SYMPTOM_CODE" from dual; 
      end if; 
   end if; 
end;

ALTER TRIGGER "SYMPTOM_PK_TRIGGER" ENABLE;

ALTER TABLE "SYMPTOM" ADD PRIMARY KEY ("SYMPTOM_CODE");

ALTER TABLE "SYMPTOM" ADD CONSTRAINT "FK_SYMPTOMSSID" FOREIGN KEY ("SEVERITY_SCALE_ID")
	  REFERENCES "SEVERITY_SCALE" ("SEVERITY_SCALE_ID") ENABLE;
 
ALTER TABLE "SYMPTOM" ADD CONSTRAINT "FK_SYM_IMPLIED_BODYPART" FOREIGN KEY ("BODY_PART_CODE")
	  REFERENCES "BODY_PART" ("BODY_PART_CODE") ENABLE;

CREATE TABLE "SYMPTOM_METADATA" 
   (	"CHECK_IN_ID" NUMBER(10,0), 
	"SYMPTOM_CODE" VARCHAR2(20 BYTE), 
	"BODY_PART_CODE" VARCHAR2(20 BYTE), 
	"DURATION_DAYS" NUMBER(3,0), 
	"SEVERITY_SCALE_VALUE_ID" NUMBER(10,0), 
	"FIRST_OCCURRENCE" NUMBER(1,0), 
	"CAUSE" VARCHAR2(4000 BYTE), 
	"DESCRIPTION" VARCHAR2(4000 BYTE), 
	"SYMPTOM_METADATA_ID" NUMBER(10,0)
   );

CREATE UNIQUE INDEX "SYS_C00643285" ON "SYMPTOM_METADATA" ("SYMPTOM_METADATA_ID");

CREATE OR REPLACE TRIGGER "TRIGGER_PK_SYMPTOM_METADATA" 
   before insert on "SYMPTOM_METADATA" 
   for each row 
begin  
   if inserting then 
      if :NEW."SYMPTOM_METADATA_ID" is null then 
         select SYMPTOM_METADATA_SEQ.nextval into :NEW."SYMPTOM_METADATA_ID" from dual; 
      end if; 
   end if; 
end;


ALTER TRIGGER "TRIGGER_PK_SYMPTOM_METADATA" ENABLE;

ALTER TABLE "SYMPTOM_METADATA" ADD CONSTRAINT "SYMPTOM_MD_FIRST_OCCURENCE" CHECK (first_occurrence IN(0, 1)) ENABLE;
 
ALTER TABLE "SYMPTOM_METADATA" ADD CONSTRAINT "SYS_C00643285" PRIMARY KEY ("SYMPTOM_METADATA_ID");

ALTER TABLE "SYMPTOM_METADATA" MODIFY ("SYMPTOM_METADATA_ID" NOT NULL ENABLE);

ALTER TABLE "SYMPTOM_METADATA" ADD CONSTRAINT "FK_SYMPTOMBODYPART" FOREIGN KEY ("BODY_PART_CODE")
	  REFERENCES "BODY_PART" ("BODY_PART_CODE") ENABLE;
 
ALTER TABLE "SYMPTOM_METADATA" ADD CONSTRAINT "FK_SYMPTOMMDCHECKIN" FOREIGN KEY ("CHECK_IN_ID")
	  REFERENCES "CHECK_IN" ("CHECK_IN_ID") ENABLE;
 
ALTER TABLE "SYMPTOM_METADATA" ADD CONSTRAINT "FK_SYMPTOMMDSYMPTOM" FOREIGN KEY ("SYMPTOM_CODE")
	  REFERENCES "SYMPTOM" ("SYMPTOM_CODE") ENABLE;
 
ALTER TABLE "SYMPTOM_METADATA" ADD CONSTRAINT "FK_SYMPTOMSEVVALUESCALE" FOREIGN KEY ("SEVERITY_SCALE_VALUE_ID")
	  REFERENCES "SEVERITY_SCALE_VALUE" ("SEVERITY_VALUE_ID") ENABLE;

CREATE TABLE "TREATMENT" 
   (	"CHECK_IN_ID" NUMBER(10,0), 
	"TREATMENT_TIME" TIMESTAMP (6), 
	"MEDICAL_STAFF_ID" NUMBER(10,0)
   );

CREATE UNIQUE INDEX "SYS_C00643291" ON "TREATMENT" ("CHECK_IN_ID");

ALTER TABLE "TREATMENT" ADD PRIMARY KEY ("CHECK_IN_ID");

ALTER TABLE "TREATMENT" ADD CONSTRAINT "FK_TREATMENT_MEDICAL_STAFF" FOREIGN KEY ("MEDICAL_STAFF_ID")
	  REFERENCES "MEDICAL_STAFF" ("MEDICAL_STAFF_ID") ENABLE;

CREATE TABLE "VITAL_SIGNS" 
   (	"TEMPERATURE" NUMBER(3,0), 
	"SYSTOLIC_PRESSURE" NUMBER(3,0), 
	"DIASTOLIC_PRESSURE" NUMBER(3,0), 
	"CHECK_IN_ID" NUMBER(10,0), 
	"MEDICAL_STAFF_ID" NUMBER(10,0)
   );

CREATE UNIQUE INDEX "SYS_C00643287" ON "VITAL_SIGNS" ("CHECK_IN_ID");

ALTER TABLE "VITAL_SIGNS" ADD PRIMARY KEY ("CHECK_IN_ID");

ALTER TABLE "VITAL_SIGNS" ADD CONSTRAINT "VITAL_SIGNS_CHK_DIAS" CHECK (DIASTOLIC_PRESSURE >= 30 AND DIASTOLIC_PRESSURE<=110) ENABLE;
 
ALTER TABLE "VITAL_SIGNS" ADD CONSTRAINT "VITAL_SIGNS_CHK_SYS" CHECK (SYSTOLIC_PRESSURE >= 60 AND SYSTOLIC_PRESSURE<=200) ENABLE;


ALTER TABLE "VITAL_SIGNS" ADD CONSTRAINT "FK_VITALSIGNSCHECKIN" FOREIGN KEY ("CHECK_IN_ID")
	  REFERENCES "CHECK_IN" ("CHECK_IN_ID") ENABLE;
 
ALTER TABLE "VITAL_SIGNS" ADD CONSTRAINT "FK_VITALSIGNSMEDSTAFF" FOREIGN KEY ("MEDICAL_STAFF_ID")
	  REFERENCES "MEDICAL_STAFF" ("MEDICAL_STAFF_ID") ENABLE;